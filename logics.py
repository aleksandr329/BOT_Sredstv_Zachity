from main import *
from db import *
from parametrs import *


call_data = []# —Å–æ–∑–¥–∞–µ–º —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö


def step3(call):
    try:
        list_call_data = [i[1] for i in db_table_all()]# –≥–µ–Ω–µ—Ä–∏–º —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –±—ã–ª–∏ –≤ –Ω–µ–º –≤—Å–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
        if call.data == 'go':
            file = open('1.txt', 'r')# –Ω—É–∂–Ω–æ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –µ—Å–ª–∏ –∫—Ç–æ —Ç–æ —É–∂–µ —Å–æ–∑–¥–∞–µ—Ç –∑–∞–¥–∞–Ω–∏–µ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞
            bot.send_message(call.message.chat.id, stop)
            start(call.message)


        if call.data == 'zad_all':# –≤—ã–≤–æ–¥–∏–º –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            for i in db_table_all():
                if i[8] in bad_name:# –µ—Å–ª–∏ –Ω–µ—Ç –Ω–∏–∫ –Ω—ç–π–º–∞
                    text = f'''
<b>–ó–∞–≥–æ–ª–æ–≤–æ–∫</b>: {i[1]}
<b>–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç</b>: {i[2]}
<b>–ö—Ä–∞–π–Ω–∏–π —Å—Ä–æ–∫</b>: {i[4]}
<b>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è</b>: {i[5]}
<b>–ê–≤—Ç–æ—Ä</b>: {i[7]}
<b>–ê–≤—Ç–æ—Ä—É –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å NIK_NAME</b> üò°'''
                else:
                    text = f'''
<b>–ó–∞–≥–æ–ª–æ–≤–æ–∫</b>: {i[1]}
<b>–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç</b>: {i[2]}
<b>–ö—Ä–∞–π–Ω–∏–π —Å—Ä–æ–∫</b>: {i[4]}
<b>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è</b>: {i[5]}
<b>–ê–≤—Ç–æ—Ä</b>: {i[7]}
<b>–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∞</b>: https://t.me/{i[8]}'''
                bot.send_message(call.message.chat.id, text, parse_mode='HTML')
                bot.send_photo(call.message.chat.id, i[3])
                bot.send_message(call.message.chat.id, '‚ùó‚ùó‚ùó‚ùó‚ùó‚ùó‚ùó‚ùó‚ùó‚ùó‚ùó‚ùó‚ùó‚ùó')
            else:
                start(call.message)


        if call.data == 'vibor':# –¥–ª—è –≤—ã–≤–æ–¥–∞ –∑–∞–¥–∞–Ω–∏–π –≤ –≤–∏–¥–µ –∫–Ω–æ–ø–æ–∫
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            buttons = []
            for i in db_table_all():
                button = types.KeyboardButton(text = f'{i[1]}')
                buttons.append(button)

            markup.add(*buttons)
            bot.send_message(call.message.chat.id, 'üëáüèª', reply_markup=markup)

        if call.data == 'delet':# –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
            if call.message.chat.id in driver:# –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ —ç—Ç–æ–º —Å–ø–∏—Å–∫–µ
                markup = telebot.types.InlineKeyboardMarkup(row_width=2)
                buttons = []
                for i in db_table_all():
                    button = telebot.types.InlineKeyboardButton(text=f'{i[1]}', callback_data=f'{i[1]}')
                    buttons.append(button)

                markup.add(*buttons)
                bot.send_message(call.message.chat.id, 'üëáüèª', reply_markup=markup)
            else:
                bot.send_message(call.message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞')


        if call.data in list_call_data:# –≤–æ—Ç –¥–ª—è —á–µ–≥–æ –º—ã –≥–µ–Ω–µ—Ä–∏–ª–∏ —Å–ø–∏—Å–æ–∫ —Å–æ –≤—Å–µ–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –Ω–∞–≤–µ—Ä—Ö—É
            call_data.append(call.data)# –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ
            markup = telebot.types.InlineKeyboardMarkup(row_width=1)
            markup.add(telebot.types.InlineKeyboardButton(text='–î–∞ —É–¥–∞–ª—è–µ–º üòé', callback_data='yes'))
            markup.add(telebot.types.InlineKeyboardButton(text='–ù–µ—Ç, –æ—Ç–º–µ–Ω–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ üò∞', callback_data='no'))
            bot.send_message(call.message.chat.id, f'{call.message.chat.first_name} –≤—ã —É–≤–µ—Ä–µ–Ω–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å \n {call_data[-1]} ‚ùì', reply_markup=markup, parse_mode='HTML')

        if call.data == 'yes':
            li_st = db_table_get(call_data[-1])# –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Ç–∞–ª–∏—Ü—ã
            db_table_zap2(li_st[1], li_st[2], li_st[6],li_st[7], li_st[8],li_st[3],li_st[5], li_st[4])
            bot.send_message(li_st[6], f'–í–∞—à–µ –∑–∞–¥–∞–Ω–∏–µ: {li_st[1]} \n–í—ã–ø–æ–ª–Ω–µ–Ω–æ: {a_time}')
            bot.send_photo(li_st[6], li_st[3])
            db_table_delete(call_data[-1])
            bot.send_message(call.message.chat.id, f'{call_data[-1]} —É–¥–∞–ª–µ–Ω ‚ò†')
            start(call.message)

        if call.data == 'no':
            start(call.message)

        else:
            pass

    except AttributeError:
        pass
    except TypeError:
        pass
    except FileNotFoundError:
        if call.message.chat.id in meneger:# –ø—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–ø–∏—Å–∫–µ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
            bot.send_message(call.message.chat.id, '–ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ')
        else:
            bot.send_message(call.message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞')


def step4(message):
    if db_table_get(message.text):# –µ—Å–ª–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ –µ—Å—Ç—å —Ç–∞–∫–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫. –≠—Ç–æ –¥–ª—è –æ—Ç–ª–∞–≤–ª–∏–≤–∞–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∏
        text = db_table_get(message.text)
        if text[8] in bad_name:# –µ—Å–ª–∏ –Ω–µ—Ç –Ω–∏–∫ –Ω—ç–π–º–∞
            text2 = f'''
<b>–ó–∞–≥–æ–ª–æ–≤–æ–∫</b>: {text[1]}
<b>–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç</b>: {text[2]}
<b>–ö—Ä–∞–π–Ω–∏–π —Å—Ä–æ–∫</b>: {text[4]}
<b>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è</b>: {text[5]}
<b>–ê–≤—Ç–æ—Ä</b>: {text[7]}
<b>–ê–≤—Ç–æ—Ä—É –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å NIK_NAME</b> üò°'''
        else:
            text2 = f'''
<b>–ó–∞–≥–æ–ª–æ–≤–æ–∫</b>: {text[1]}
<b>–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç</b>: {text[2]}
<b>–ö—Ä–∞–π–Ω–∏–π —Å—Ä–æ–∫</b>: {text[4]}
<b>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è</b>: {text[5]}
<b>–ê–≤—Ç–æ—Ä</b>: {text[7]}
<b>–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∞</b>: https://t.me/{text[8]}'''
        bot.send_message(message.chat.id, text2, parse_mode='HTML')
        bot.send_photo(message.chat.id, text[3])
        start(message)
    else:
        pass

def delite_file():# —ç—Ç–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–≥–æ –≤–≤–æ–¥–∏–ª –∑–∞–¥–∞–Ω–∏–µ
    try:
        os.remove("1.txt")
    except FileNotFoundError:
        pass

